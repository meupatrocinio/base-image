user  www-data;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

worker_rlimit_nofile 100000;

events {
    worker_connections  2048;
}

http {
    include /etc/nginx/mime.types;


    
    default_type application/octet-stream;

    # Update charset_types to match updated mime.types.
    # text/html is always included by charset module.
    charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log  main;

    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;

    # Shared dictionary to store metrics
    lua_shared_dict prometheus_metrics 100M;
    lua_package_path "/etc/nginx/lua_modules/?.lua";

    # Defining upstream cache status for nginx metrics
    map $upstream_cache_status $cache_status {
      default  $upstream_cache_status;
      ''       "NONE";
    }

    # Defining metrics
    init_worker_by_lua_block {
      prometheus = require("prometheus").init("prometheus_metrics")
      metric_requests = prometheus:counter(
        "nginx_http_requests_total", "Number of HTTP requests", {"host", "status", "cache_status"})
      metric_latency = prometheus:histogram(
        "nginx_http_request_duration_seconds", "HTTP request latency", {"host"})
      metric_connections = prometheus:gauge(
        "nginx_http_connections", "Number of HTTP connections", {"state"})
    }
    log_by_lua_block {
      metric_requests:inc(1, {ngx.var.server_name, ngx.var.status, ngx.var.cache_status })
      metric_latency:observe(tonumber(ngx.var.request_time), {ngx.var.server_name})
    }
    
    # this gzip config loosely follows reccomendations from html5boilerpate project:
    # https://github.com/h5bp/server-configs-nginx/blob/master/nginx.conf
    gzip on;
    gzip_comp_level    5;
    gzip_min_length    256;
    gzip_proxied       any;
    gzip_vary          on;

    # Compress all output labeled with one of the following MIME-types.
    gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

    # we need to update the NGINX version to at least 1.7.9
    # http://nginx.org/en/docs/http/ngx_http_headers_module.html#expires
#     map $sent_http_content_type $expires {
#        default                    off;
#        text/html                  epoch;
#        text/css                   max;
#        application/javascript     max;
#        ~image/                    max;
#    }
#    expires $expires;

    # Here we include all the server specific configs
    include /etc/nginx/conf.d/*.conf;
}

daemon off;
